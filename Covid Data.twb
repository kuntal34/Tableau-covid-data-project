<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='owid-covid-data' inline='true' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.1jyjlal0qmqe1n11jbwq30e9mv7e'>
            <connection class='textscan' directory='C:/Users/Sanjay Chaudhary/Downloads' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1jyjlal0qmqe1n11jbwq30e9mv7e' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='positive_rate' ordinal='31' />
            <column datatype='string' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1jyjlal0qmqe1n11jbwq30e9mv7e' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='real' name='new_tests' ordinal='25' />
            <column datatype='real' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='positive_rate' ordinal='31' />
            <column datatype='string' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='real' name='new_vaccinations' ordinal='37' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='real' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking' datatype='integer' name='[Calculation_635570559125721092]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([population]))'>
          <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Ranking as per Extreme poverty' datatype='integer' name='[Calculation_635570559130112008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([extreme_poverty]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ranking as per total cases' datatype='integer' name='[Calculation_635570559132471305]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_cases]))'>
          <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='%Change total cases' datatype='real' name='[Calculation_635570559379382285]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([total_cases_per_million])) - LOOKUP(ZN(SUM([total_cases_per_million])), -1)) / ABS(LOOKUP(ZN(SUM([total_cases_per_million])), -1))'>
          <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='%Change in Total Death' datatype='real' name='[Calculation_635570559451836431]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([total_deaths_per_million])) - LOOKUP(ZN(SUM([total_deaths_per_million])), -1)) / ABS(LOOKUP(ZN(SUM([total_deaths_per_million])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='owid-covid-data.csv' datatype='table' name='[__tableau_internal_object_id__].[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='real' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Attribute' name='[attr:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Avg' name='[avg:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[cum:sum:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[pcdf:sum:total_cases_per_million:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[pcdf:sum:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[aged_65_older]' derivation='Sum' name='[pcto:sum:aged_65_older:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[aged_70_older]' derivation='Sum' name='[pcto:sum:aged_70_older:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality]' derivation='Sum' name='[sum:excess_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extreme_poverty]' derivation='Sum' name='[sum:extreme_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[handwashing_facilities]' derivation='Sum' name='[sum:handwashing_facilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Sum' name='[sum:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_per_thousand]' derivation='Sum' name='[sum:new_tests_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed]' derivation='Sum' name='[sum:new_tests_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed_per_thousand]' derivation='Sum' name='[sum:new_tests_smoothed_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[sum:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed_per_million]' derivation='Sum' name='[sum:new_vaccinations_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reproduction_rate]' derivation='Sum' name='[sum:reproduction_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[stringency_index]' derivation='Sum' name='[sum:stringency_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_tests_per_thousand]' derivation='Sum' name='[sum:total_tests_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_635570559125721092]' derivation='User' name='[usr:Calculation_635570559125721092:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_635570559130112008]' derivation='User' name='[usr:Calculation_635570559130112008:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_635570559379382285]' derivation='User' name='[usr:Calculation_635570559379382285:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_635570559379382285]' derivation='User' name='[usr:Calculation_635570559379382285:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_635570559379382285]' derivation='User' name='[usr:Calculation_635570559379382285:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[date]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_635570559379382285]' derivation='User' name='[usr:Calculation_635570559379382285:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:extreme_poverty:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559085981696:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559119491073:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[avg:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:handwashing_facilities:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:female_smokers:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[__tableau_internal_object_id__].[cnt:owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[pcto:sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:reproduction_rate:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests_smoothed_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:people_vaccinated_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[attr:population:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:stringency_index:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559123816451:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559123816451:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:excess_mortality:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_vaccinations:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_tests:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559085981696:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:people_fully_vaccinated_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[pcdf:sum:total_cases_per_million:qk:1]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[pcdf:sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[pcto:sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:aged_70_older:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_tests_per_thousand:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='owid-covid-data.csv' id='owid-covid-data.csv_5073C6C588CC466886539EEF0CF0219D'>
            <properties context=''>
              <relation connection='textscan.1jyjlal0qmqe1n11jbwq30e9mv7e' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='real' name='new_tests' ordinal='25' />
                  <column datatype='real' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='real' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='string' name='positive_rate' ordinal='31' />
                  <column datatype='string' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='real' name='new_vaccinations' ordinal='37' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='real' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                  <column datatype='real' name='excess_mortality' ordinal='59' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='%Change in Total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='%Change total cases' datatype='real' name='[Calculation_635570559379382285]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([total_cases_per_million])) - LOOKUP(ZN(SUM([total_cases_per_million])), -1)) / ABS(LOOKUP(ZN(SUM([total_cases_per_million])), -1))'>
                <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='%Change in Total Death' datatype='real' name='[Calculation_635570559451836431]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(ZN(SUM([total_deaths_per_million])) - LOOKUP(ZN(SUM([total_deaths_per_million])), -1)) / ABS(LOOKUP(ZN(SUM([total_deaths_per_million])), -1))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[cum:sum:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_635570559379382285]' derivation='User' name='[usr:Calculation_635570559379382285:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[date]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_635570559451836431]' derivation='User' name='[usr:Calculation_635570559451836431:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[date]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_cases_per_million:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Latitude (generated)]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Longitude (generated)]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_cases_per_million:qk]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:3]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_deaths_per_million:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559451836431:qk:2]' />
              <geometry column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Latitude (generated)]</rows>
        <cols>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[tyr:date:ok] * [federated.0tl7vul1iwj1221fr1ba40k9d51b].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{19C9B6E0-7835-43D0-A715-FDB1FA49F6F0}' />
    </worksheet>
    <worksheet name='CountryWise Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[pcto:sum:aged_70_older:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[pcto:sum:aged_70_older:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:cardiovasc_death_rate:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:diabetes_prevalence:qk]' />
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
              <geometry column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Latitude (generated)]</rows>
        <cols>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5777C5C6-1F7E-460C-B023-9DB84A7A49AD}' />
    </worksheet>
    <worksheet name='India Covidcases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>India CovidCases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='New Tests' datatype='real' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[handwashing_facilities]' derivation='Sum' name='[sum:handwashing_facilities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:handwashing_facilities:qk]' value='244' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases:qk]' value='244' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk]' value='244' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests:qk]' value='244' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[yr:date:ok]' value='347' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='body-type' value='box' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='694' />
                <format attr='maxwidth' value='694' />
                <format attr='minheight' value='119' />
                <format attr='maxheight' value='119' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:handwashing_facilities:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:handwashing_facilities:qk] + ([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_cases:qk] + ([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk] + [federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_tests:qk])))</rows>
        <cols>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk] / [federated.0tl7vul1iwj1221fr1ba40k9d51b].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{EDA27A6F-A893-4E2B-B326-06F1E15361F5}' />
    </worksheet>
    <worksheet name='India Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
            <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:female_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:human_development_index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:life_expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:male_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:median_age:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]' value='123' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Multiple Values]</rows>
        <cols>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk] / [federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DBD763A8-42F8-4F9A-9D4F-00D153C11928}' />
    </worksheet>
    <worksheet name='Location vs GDP,Death,hospital beds'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Location vs GDP,New death cases,hospital beds
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk]' value='132' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:hospital_beds_per_thousand:qk]' value='132' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk]' value='132' />
            <format attr='width' field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]' value='132' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='117' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:hospital_beds_per_thousand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:gdp_per_capita:qk] + ([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:hospital_beds_per_thousand:qk] + ([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:new_deaths:qk] + [federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{9EB153AF-EC3A-4E50-B312-B1F748D80E36}' />
    </worksheet>
    <worksheet name='LocationWise Total Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Sum' name='[sum:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_tests:qk]' />
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_vaccinations:qk]' />
              <geometry column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Latitude (generated)]</rows>
        <cols>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02312C00-B0A8-44D2-A2F9-EF72A1407A1A}' />
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Ranking' datatype='integer' name='[Calculation_635570559125721092]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([population]))'>
                <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Ranking as per Extreme poverty' datatype='integer' name='[Calculation_635570559130112008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([extreme_poverty]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_635570559125721092]' derivation='User' name='[usr:Calculation_635570559125721092:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_635570559130112008]' derivation='User' name='[usr:Calculation_635570559130112008:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter expression='SUM([population]) &gt;= 80000000000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:location:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]' included-values='non-null' />
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='633' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]' z-order='1' />
            <reference-line axis-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3]' z-order='2' />
            <reference-line axis-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]' z-order='3' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:population:qk] + ([federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3] + [federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559130112008:qk:2]))</rows>
        <cols />
      </table>
      <simple-id uuid='{03E60BCD-5FA8-423C-9989-3D916B1495D1}' />
    </worksheet>
    <worksheet name='Ranking(total cases)'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data' name='federated.0tl7vul1iwj1221fr1ba40k9d51b' />
          </datasources>
          <datasource-dependencies datasource='federated.0tl7vul1iwj1221fr1ba40k9d51b'>
            <column caption='Ranking' datatype='integer' name='[Calculation_635570559125721092]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([population]))'>
                <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Ranking as per total cases' datatype='integer' name='[Calculation_635570559132471305]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_cases]))'>
                <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_635570559125721092]' derivation='User' name='[usr:Calculation_635570559125721092:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_635570559132471305]' derivation='User' name='[usr:Calculation_635570559132471305:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[location]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;North America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='312' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559132471305:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559125721092:qk:3] + [federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559132471305:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{1C68A878-9CC8-4F4E-80EC-0962DC71B2D7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1168' maxwidth='1624' minheight='1168' minwidth='1624' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='56849' id='3' name='India Covidcases' w='40764' x='985' y='5908' />
        <zone h='60360' id='9' name='Population' w='45197' x='43904' y='2911'>
          <layout-cache minheight='358' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='4366' id='8' name='India Covidcases' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' type-v2='color' w='8621' x='1355' y='1541' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='30' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='60360' id='9' is-fixed='true' name='Population' w='45197' x='43904' y='2911'>
                  <layout-cache minheight='358' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56849' id='3' is-fixed='true' name='India Covidcases' w='40764' x='985' y='5908'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4366' id='8' name='India Covidcases' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' type-v2='color' w='8621' x='1355' y='1541'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FCE2B4C4-7EF4-44FF-98ED-4D94A6E0C6D4}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='81444' id='3' name='Ranking(total cases)' w='27875' x='1250' y='556' />
        <zone h='14000' id='8' name='Ranking(total cases)' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type-v2='color' w='9688' x='30438' y='6667' />
        <zone h='77667' id='9' name='Location vs GDP,Death,hospital beds' w='34500' x='45938' y='2889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='30' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='81444' id='3' is-fixed='true' name='Ranking(total cases)' w='27875' x='1250' y='556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14000' id='8' name='Ranking(total cases)' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type-v2='color' w='9688' x='30438' y='6667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77667' id='9' is-fixed='true' name='Location vs GDP,Death,hospital beds' w='34500' x='45938' y='2889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F5231713-81F0-4EF8-881E-E69F37EBE5CC}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='1000' maxwidth='1800' minheight='1000' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='39800' id='3' name='LocationWise Total Data' w='28056' x='833' y='2100' />
        <zone h='7000' id='8' name='LocationWise Total Data' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]' type-v2='color' w='10278' x='29944' y='7800' />
        <zone h='34400' id='9' name='%Change in Total cases' w='33500' x='42000' y='7300' />
        <zone h='10000' id='15' name='%Change in Total cases' pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]' type-v2='color' w='10611' x='77889' y='8900' />
        <zone h='52500' id='16' name='CountryWise Death' w='38500' x='500' y='43600' />
        <zone h='48100' id='17' name='India Data' w='35167' x='41389' y='48200' />
        <zone h='15100' id='22' name='India Data' pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]' type-v2='color' w='14389' x='77667' y='55500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='29' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='39800' id='3' is-fixed='true' name='LocationWise Total Data' w='28056' x='833' y='2100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='8' name='LocationWise Total Data' pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]' type-v2='color' w='10278' x='29944' y='7800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34400' id='9' is-fixed='true' name='%Change in Total cases' w='33500' x='42000' y='7300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10000' id='15' name='%Change in Total cases' pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]' type-v2='color' w='10611' x='77889' y='8900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52500' id='16' is-fixed='true' name='CountryWise Death' w='38500' x='500' y='43600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48100' id='17' is-fixed='true' name='India Data' w='35167' x='41389' y='48200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15100' id='22' name='India Data' pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]' type-v2='color' w='14389' x='77667' y='55500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6AF3DDB9-DF08-4EB7-8AED-645BF11D8C8C}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='307' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='96544' id='1' param='vert' removable='false' type-v2='layout-flow' w='97864' x='1068' y='1728'>
            <zone h='7127' id='3' type-v2='title' w='97864' x='1068' y='1728' />
            <zone h='21814' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='97864' x='1068' y='8855' />
            <zone h='67603' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='97864' x='1068' y='30669'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Spread Of Covid Cases In India' captured-sheet='Dashboard 1' id='1' />
                  <story-point caption='Ranking Of India As Compared To Other Countries' captured-sheet='Dashboard 2' id='2' />
                  <story-point caption='Percentage change of total cases,total deaths in India' captured-sheet='Dashboard 3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C0C817AA-204D-4AFF-9237-E365FB35E909}' />
    </dashboard>
  </dashboards>
  <windows source-height='44'>
    <window class='worksheet' name='India Covidcases'>
      <cards>
        <edge name='left'>
          <strip size='177'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:positive_rate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF6A8EA2-D266-4C43-BE69-FFA9EAAB02CF}' />
    </window>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:positive_rate:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559085981696:qk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B9DC380-12CE-45A2-AB85-1E57F29C88CC}' />
    </window>
    <window class='worksheet' name='Ranking(total cases)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BDBEC27-E1CF-4DCB-8ECC-AEB1292BA770}' />
    </window>
    <window class='worksheet' name='Location vs GDP,Death,hospital beds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:positive_rate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4662587D-1B76-4A0F-973C-CEF6BAEEFBE4}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='India Covidcases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:continent:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Population'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F6901A11-53EE-4FFC-A22D-B17E246B52CA}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Location vs GDP,Death,hospital beds'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:hospital_beds_per_thousand:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ranking(total cases)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BAC04F5E-2847-41CA-84CB-9630E5D4D00B}' />
    </window>
    <window class='worksheet' name='LocationWise Total Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[sum:total_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E91111F-DFEB-486E-9FCC-31EA8CDE7A91}' />
    </window>
    <window class='worksheet' name='%Change in Total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[cum:sum:total_cases_per_million:qk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[tyr:date:ok]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[usr:Calculation_635570559379382285:qk:2]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2CCD539-AC59-45A0-AD91-82E24A5500EB}' />
    </window>
    <window class='worksheet' name='CountryWise Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AC3C9DE-C874-45EC-B57E-3FAF3243BC9E}' />
    </window>
    <window class='worksheet' name='India Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]</field>
            <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:positive_rate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE81C4BB-826F-421E-8C94-902C3443A6D0}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='%Change in Total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CountryWise Death'>
          <zoom type='entire-view' />
          <highlight field='[federated.0tl7vul1iwj1221fr1ba40k9d51b].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='India Data'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0tl7vul1iwj1221fr1ba40k9d51b].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='LocationWise Total Data'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E210E04A-7FE1-41F6-AE19-40CC6504F6C3}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9B1F6FA9-AD21-4211-B85E-6B4EE06A3997}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='%Change in Total cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CountryWise Death' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Yk2mV+oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='India Covidcases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='India Data' width='192'>
      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
      Thc5DSo8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8
      TQIgPE1WqYi3UimUcSy7IWOpuoY/HHj9Dd+BBEC8ldv/7TMySzsNGav9fBcf/cufnugYNU+B
      CocZbj1dFF/O73PnzhTzK5tUClnS+0cU9rfY3i/UsVQh6q/mANgYhAwFF5iZW2Ts8iSHmS3M
      apHcYY5HCzt0NIfrWKoQ9VfzFCjW1ASsA2ABPlXBQMHEYe7BPfomrqOAdIV4B6exK8R3/b/q
      J8V13NfuN47tvNMYNQfAcWxcx8GxHZr8GjvZPEXLwYfK8OSH5HbmybY3Ew8Z0hWiRqexK0Qj
      u0YoqvLa/cbh3QJQ8xRoe20ZNJWllXWGRicoZbYYHZ/AH2km2Rrj0tVruNXyOxUnxEmr+W25
      u3+I7m9cPjt04euNGsc/E3Gj1s0L0RDyRZjwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA
      8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwtLqsUzzcWebxepZEPEF/R5RsycBv
      ZSgHknTJwnhxitXlCJDa3iUQjtDd1YFjVSjkDljcLtApO7845epyBBgYv0q1WmXqzhQTF/tY
      mJmmZ3hMukK8I+kKcYq7QnxTamcTR/WBqgMqFyauUz1YZucgQUciLF0haiRdIU6+K0Rd9spk
      Zzd7ewdcvTqJX1cIRBT0niuUy/KuL063ugRA1Qza2tu/cfn4ZzCo1WPzQpwYOQ0qPE0CIDxN
      AiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8TQIgPE0CIDxNAiA8rS5/DJdLbzK7toM/1MS5
      7jgHJQOfmaEa6pAVYeJUq0sAFta2uDJ5jQdTU5h2iEL+iM1ciWuTL9/59wpHHJZL9Rj+tXRV
      40yiuSFjifdLXQLgoKApCirHCxSWZmfpOj/Kq5ZO3N1c59b6Sj2Gf62I38+/+eTHDRlLvF/q
      8hkgGQsyPb9IyVExUDl/6RqBSort/aN6bF6IE1OXI0DP0Aj5w0MG+/sxVJfeqILWc5lq1a7H
      5hsm9de3sI4aMy0L9XcSnzzXkLHEyz0LwO8Wr9cqGI4ADsdrlF0sC1RVwTRNbNvGNM3nbq+4
      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
    </thumbnail>
    <thumbnail height='192' name='Location vs GDP,Death,hospital beds' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='LocationWise Total Data' width='192'>
      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
      /z+juFWas2tDLQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ranking(total cases)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
